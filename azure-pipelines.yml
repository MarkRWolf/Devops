# azure-pipelines.yml
# CI/CD: build images, push to ACR, then point Container Apps at the new tag

trigger:
  - azmaster

resources:
  - repo: self

variables:
  # ACR / service-connection
  dockerRegistryServiceConnection: "ee2aa85b-89a3-47c9-b26b-b3c796e95bc0"
  containerRegistry: "devopsdashboard.azurecr.io"

  # image / build paths
  serverImageRepository: "devopsserver"
  clientImageRepository: "devopsclient"
  serverDockerfilePath: "$(Build.SourcesDirectory)/Devops/Dockerfile"
  clientDockerfilePath: "$(Build.SourcesDirectory)/client/Dockerfile"
  serverBuildContext: "$(Build.SourcesDirectory)/Devops"
  clientBuildContext: "$(Build.SourcesDirectory)/client"

  tag: "$(Build.BuildId)" # unique tag every run
  vmImageName: "ubuntu-latest"

  # ACA deployment targets
  azureServiceConnection: "ee2aa85b-89a3-47c9-b26b-b3c796e95bc0"
  resourceGroup: "rg-devops"
  clientAppName: "devopsclient"
  serverAppName: "devopsserver"

stages:
  # ───────────────────────────────────────── Build & Push ─────────────────────────────────────────
  - stage: Build
    displayName: Build and push images
    jobs:
      - job: Build
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: Docker@2
            displayName: Build & push server
            inputs:
              command: buildAndPush
              repository: $(serverImageRepository)
              dockerfile: $(serverDockerfilePath)
              buildContext: $(serverBuildContext)
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)
                latest

          - task: Docker@2
            displayName: Build & push client
            inputs:
              command: buildAndPush
              repository: $(clientImageRepository)
              dockerfile: $(clientDockerfilePath)
              buildContext: $(clientBuildContext)
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)
                latest

  # ───────────────────────────────────────── Deploy / Roll ACA ────────────────────────────────────
  - stage: Deploy
    displayName: Update Container Apps
    dependsOn: Build
    jobs:
      - job: RollRevisions
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: AzureCLI@2
            displayName: Update CLIENT app
            inputs:
              azureSubscription: $(azureServiceConnection)
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                az containerapp update \
                  --name $(clientAppName) \
                  --resource-group $(resourceGroup) \
                  --image $(containerRegistry)/$(clientImageRepository):$(tag)

          - task: AzureCLI@2
            displayName: Update SERVER app
            inputs:
              azureSubscription: $(azureServiceConnection)
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                az containerapp update \
                  --name $(serverAppName) \
                  --resource-group $(resourceGroup) \
                  --image $(containerRegistry)/$(serverImageRepository):$(tag)
